name: goreleaser

on:
  push:
    # run only against tags
    tags:
      - '*'

permissions:
  contents: write
  # packages: write
  issues: write

jobs:
  build:
    # runs-on: ubuntu-latest
    name: ${{ matrix.job.os }} (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {os: ubuntu-20.04, target: x86_64-unknown-linux-gnu}
          - {os: macos-10.15, target: x86_64-apple-darwin}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch all tags
        run: git fetch --force --tags
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
      - uses: Swatinem/rust-cache@v1
      - name: Build on ${{ matrix.job.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.job.target }}

      - uses: actions/upload-artifact@v3
        with:
          name: snazy-${{ matrix.job.target }}
          path: target/${{ matrix.job.target }}/release/snazy
  goreleaser:
    name: Goreleaser over Rust
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: snazy-x86_64-unknown-linux-gnu
          path: target/linux_amd64/snazy
      - uses: actions/download-artifact@v3
        with:
          name: snazy-x86_64-apple-darwin
          path: target/darwin_amd64/snazy

      # - uses: mxschmitt/action-tmate@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUR_PRIVATE_KEY: ${{ secrets.AUR_PRIVATE_KEY }}
